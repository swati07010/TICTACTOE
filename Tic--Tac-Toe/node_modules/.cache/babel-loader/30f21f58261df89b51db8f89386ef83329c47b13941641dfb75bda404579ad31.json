{"ast":null,"code":"var _jsxFileName = \"D:\\\\Salesforce\\\\project1\\\\src\\\\TicTacToeGame\\\\Board.jsx\",\n  _s = $RefreshSig$();\n//import React from 'react'\nimport React, { useState } from \"react\";\nimport Square from \"./Square\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const [state, setState] = useState(Array(9).fill(null));\n  const [isXTurn, setIsXturn] = useState(true);\n  const checkWinner = () => {\n    const winnerLogic = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let logic of winnerLogic) {\n      const [a, b, c] = logic;\n      if (state[a] !== null && state[a] === state[b] && state[a] === state[c]) {\n        return state[a];\n      }\n    }\n    return false;\n  };\n  const isWinner = checkWinner();\n  const handleClick = index => {\n    if (state[index] !== null) {\n      return;\n    }\n    const copyState = [...state];\n    copyState[index] = isXTurn ? \"X\" : \"O\";\n    setState(copyState);\n    setIsXturn(!isXTurn);\n  };\n  const handleReset = () => {\n    setState(Array(9).fill(null));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [isWinner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isWinner, \" Won the Game \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Player \", isXTurn ? \"X\" : \"O\", \" please Move\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(0),\n          value: state[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(1),\n          value: state[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(2),\n          value: state[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(3),\n          value: state[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(4),\n          value: state[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(5),\n          value: state[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(6),\n          value: state[6]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(7),\n          value: state[7]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          onClick: () => handleClick(8),\n          value: state[8]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"Play Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"1TedefilWM946NTeQBPmzBCDvK4=\");\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","Square","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","state","setState","Array","fill","isXTurn","setIsXturn","checkWinner","winnerLogic","logic","a","b","c","isWinner","handleClick","index","copyState","handleReset","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["D:/Salesforce/project1/src/TicTacToeGame/Board.jsx"],"sourcesContent":["//import React from 'react'\r\nimport React, { useState } from \"react\";\r\nimport Square from \"./Square\";\r\nconst Board = () => {\r\n  \r\n  const [state, setState] = useState(Array(9).fill(null));\r\n  const [isXTurn, setIsXturn]=useState(true);\r\n  const checkWinner=()=>{\r\n    const winnerLogic = [\r\n      [0,1,2],\r\n      [3,4,5],\r\n      [6,7,8],\r\n      [0,3,6],\r\n      [1,4,7],\r\n      [2,5,8],\r\n      [0,4,8],\r\n      [2,4,6],\r\n    ];\r\n    for(let logic of winnerLogic){\r\n      const [a,b,c]=logic;\r\n      if(state[a]!==null && state[a]===state[b] && state[a]===state[c]){\r\n        return state[a];\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n  const isWinner=checkWinner();\r\n  \r\n  const handleClick =(index)=>{\r\n      if(state[index]!==null){\r\n        return;\r\n      }\r\n      const  copyState=[...state];\r\n      copyState[index]=isXTurn ? \"X\" : \"O\";\r\n      setState(copyState);\r\n      setIsXturn(!isXTurn);\r\n      \r\n   };\r\n   const handleReset=()=>{\r\n    setState(Array(9).fill(null));\r\n   }\r\n   \r\n  return (\r\n    <div className=\"board-container\">\r\n      {isWinner ? (\r\n        <>{isWinner} Won the Game <button onClick={handleReset}>Play Again</button></>\r\n      ):(\r\n        <>\r\n        <h4>Player {isXTurn ?  \"X\" :\"O\"} please Move</h4>\r\n        <div className=\"board-row\">\r\n          <Square onClick={()=>handleClick(0)} value={state[0]} />\r\n          <Square onClick={()=>handleClick(1)} value={state[1]} />\r\n          <Square onClick={()=>handleClick(2)} value={state[2]} />\r\n        </div>\r\n        <div className=\"board-row\">\r\n          <Square onClick={()=>handleClick(3)} value={state[3]} />\r\n          <Square onClick={()=>handleClick(4)} value={state[4]} />\r\n          <Square onClick={()=>handleClick(5)} value={state[5]} />\r\n        </div>\r\n        <div className=\"board-row\">\r\n          <Square onClick={()=>handleClick(6)} value={state[6]} />\r\n          <Square onClick={()=>handleClick(7)} value={state[7]} />\r\n          <Square onClick={()=>handleClick(8)} value={state[8]} />\r\n        </div>\r\n        </>\r\n        \r\n        )\r\n      } <button onClick={handleReset}>Play Again</button>\r\n   \r\n    </div>\r\n  );\r\n};\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}